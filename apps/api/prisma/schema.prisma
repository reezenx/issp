// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id     String @id @default(uuid())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("profiles")
}

model Category {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  agencies  Agency[]
  createdBy String
  readOnly  Boolean?  @default(false)
  tags      String[]
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@map("categories")
}

model Agency {
  id           String      @id @default(cuid())
  code         String      @unique
  category     Category    @relation(fields: [categoryId], references: [id])
  categoryId   String
  name         String
  email        String
  phone        String?
  readOnly     Boolean?    @default(false)
  status       Status      @default(ACTIVE)
  users        User[]
  uacs         String
  createdBy    String
  updatedBy    String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?   @updatedAt
  issps        ISSP[]
  tags         String[]
  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?
  projects     Project[]

  @@map("agencies")
}

model Department {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  uacs      String    @unique
  status    Status    @default(ACTIVE)
  agencies  Agency[]
  readOnly  Boolean?  @default(false)
  tags      String[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@map("departments")
}

model User {
  id            String          @id @default(cuid())
  firstName     String
  lastName      String
  email         String          @unique
  phone         String
  password      String
  createdBy     String
  updatedBy     String?
  sessionToken  String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @updatedAt
  agency        Agency          @relation(fields: [agencyId], references: [id])
  agencyId      String
  readOnly      Boolean?        @default(false)
  role          UserRole?       @relation("UserRole", fields: [roleId], references: [id])
  roleId        String?
  status        UserStatus
  profile       Profile?
  issps         ISSP[]          @relation("ISSPUsers")
  tags          String[]
  authoredIssps ISSP[]          @relation(name: "ISSPAuthor")
  history       ActionHistory[]
  roles         UserRole[]

  @@map("users")
}

model UserRole {
  id          String       @id @default(cuid())
  name        String       @unique
  createdBy   String
  createdAt   DateTime     @default(now())
  updatedBy   String?
  updatedAt   DateTime?    @updatedAt()
  readOnly    Boolean?     @default(false)
  tags        String[]
  permissions Permission[]
  users       User[]
  user        User[]       @relation("UserRole")

  @@map("roles")
}

model Permission {
  id         String    @id @default(cuid())
  role       UserRole? @relation(fields: [roleId], references: [id])
  roleId     String?
  action     String
  subject    String
  inverted   Boolean?  @default(false)
  readOnly   Boolean?  @default(false)
  tags       String[]
  conditions Json?
  reason     String?
  createdBy  String
  updatedBy  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt()

  @@map("permissions")
}

model Project {
  id                   String                     @id @default(cuid())
  title                String
  description          String?
  cost                 Float
  quantity             Int
  unit                 String
  tags                 String[]
  readOnly             Boolean                    @default(false)
  createdBy            String
  updatedBy            String?
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime?                  @updatedAt()
  type                 ProjectType?               @relation(fields: [typeId], references: [id])
  typeId               String?
  category             ProjectCategory?           @relation(fields: [categoryId], references: [id])
  categoryId           String?
  implementationType   ProjectImplementationType? @relation(fields: [implementationTypeId], references: [id])
  implementationTypeId String?
  budgetType           BudgetType?                @relation(fields: [budgetTypeId], references: [id])
  budgetTypeId         String?
  budgetSource         BudgetSource?              @relation(fields: [budgetSourceId], references: [id])
  budgetSourceId       String?
  agency               Agency?                    @relation(fields: [agencyId], references: [id])
  agencyId             String?
  issp                 ISSP?                      @relation(fields: [isspId], references: [id])
  isspId               String?

  @@map("projects")
}

model ProjectType {
  id                 String            @id @default(cuid())
  code               String            @unique
  name               String
  createdBy          String
  updatedBy          String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime?         @updatedAt()
  readOnly           Boolean?          @default(false)
  tags               String[]
  projects           Project[]
  projectTypeGroup   ProjectTypeGroup? @relation(fields: [projectTypeGroupId], references: [id])
  projectTypeGroupId String?

  @@map("project-types")
}

model ProjectTypeGroup {
  id           String        @id @default(cuid())
  code         String        @unique
  name         String
  readOnly     Boolean?      @default(false)
  tags         String[]
  createdBy    String
  updatedBy    String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt()
  projectTypes ProjectType[]

  @@map("project-sub-types")
}

model ProjectCategory {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  projects  Project[]
  readOnly  Boolean?  @default(false)
  tags      String[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("project-categories")
}

model ProjectImplementationType {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  projects  Project[]
  readOnly  Boolean?  @default(false)
  tags      String[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("project-implementation-types")
}

model BudgetType {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  projects  Project[]
  readOnly  Boolean?  @default(false)
  tags      String[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("budget-types")
}

model BudgetSource {
  id        String    @id @default(cuid())
  code      String    @unique
  name      String
  projects  Project[]
  readOnly  Boolean?  @default(false)
  tags      String[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("budget-source")
}

model ISSP {
  id          String          @id @default(cuid())
  title       String
  description String?
  status      ISSPStatus      @default(NOT_STARTED)
  startYear   Int
  endYear     Int
  tags        String[]
  users       User[]          @relation("ISSPUsers")
  agency      Agency          @relation(fields: [agencyId], references: [id])
  agencyId    String
  author      User            @relation(name: "ISSPAuthor", fields: [authorId], references: [id])
  authorId    String
  version     Int?            @default(1)
  readOnly    Boolean         @default(true)
  createdAt   DateTime        @default(now())
  createdBy   String
  updatedBy   String?
  updatedAt   DateTime?       @updatedAt
  history     ActionHistory[]
  projects    Project[]

  @@map("issps")
}

model ActionHistory {
  id           String     @id @default(cuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  issp         ISSP       @relation(fields: [isspId], references: [id])
  isspId       String
  isspVersion  Int
  action       ISSPAction
  changes      String[]
  parentModule String
  childModule  String
  tags         String[]
  createdAt    DateTime   @default(now())
  createdBy    String
}

model Temp {
  id   String @id @default(cuid())
  role Role?
}

enum Role {
  VIEWER
  PLANNER
  EVALUATOR
  VALIDATOR
  ASSIGNER
  ENDORSER
  APPROVER
  ADMIN
  SUPER_ADMIN
}

enum ISSPStatus {
  NOT_STARTED
  UNDER_REVIEW
  FOR_VALIDATION
  FOR_ENDORSEMENT
  APPROVED
}

enum UserStatus {
  ACTIVE
  INACTIVE
  DELETED
}

enum Status {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

enum ISSPAction {
  VIEW
  CREATE
  AMEND
  INSERT
  ASSIGN
  UPDATE
  ENDORSED
  APPROVE
}
