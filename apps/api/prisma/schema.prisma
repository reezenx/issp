// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id     String @id @default(uuid())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("profiles")
}

model Agency {
  id         String    @id @default(cuid())
  code       String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  name       String
  email      String
  phone      String
  users      User[]
  createdBy  String
  updatedBy  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  issps      ISSP[]
  tags       String[]

  @@map("agencies")
}

model Category {
  id        String    @id @default(cuid())
  code      String
  name      String
  agencies  Agency[]
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@map("categories")
}

model User {
  id              String      @id @default(cuid())
  firstName       String
  lastName        String
  email           String      @unique
  phone           String
  password        String
  createdBy       String
  updatedBy       String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime?   @updatedAt
  agency          Agency      @relation(fields: [agencyId], references: [id])
  agencyId        String
  role            Role[]      @default([VIEWER])
  status          User_Status @default(INACTIVE)
  profile         Profile?
  issps           ISSP[]      @relation("ISSPUsers")
  tags            String[]
  authoredIssps   ISSP[]      @relation(name: "ISSPAuthor")
  authoredIsspIds String[]

  @@map("users")
}

model ISSP {
  id          String      @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime    @default(now())
  status      ISSP_Status @default(NOT_STARTED)
  startYear   Int
  endYear     Int
  tags        String[]
  users       User[]      @relation("ISSPUsers")
  agency      Agency      @relation(fields: [agencyId], references: [id])
  agencyId    String
  author      User        @relation(name: "ISSPAuthor", fields: [authorId], references: [id])
  authorId    String
  version     Int?        @default(1)
  readOnly    Boolean     @default(true)
  createdBy   String
  updatedBy   String?
  updatedAt   DateTime?   @updatedAt

  @@map("issps")
}

model History {
  id      String      @id @default(cuid())
  userId  String
  action  ISSP_Action
  modules String[]
}

enum Role {
  VIEWER
  PLANNER
  EVALUATOR
  ENDORSER
  APPROVER
  ADMIN
  SUPER_ADMIN
}

enum ISSP_Status {
  NOT_STARTED
  UNDER_REVIEW
  FOR_VALIDATION
  FOR_ENDORSEMENT
  APPROVED
}

enum User_Status {
  ACTIVE
  INACTIVE
  DELETED
}

enum Agency_Code {
  DICT
  DILG
  DAR
  DA
  DBM
  DE
}

enum ISSP_Action {
  VIEW
  CREATE
  AMEND
  INSERT
  ASSIGN
  UPDATE
  ENDORSED
  APPROVE
}
