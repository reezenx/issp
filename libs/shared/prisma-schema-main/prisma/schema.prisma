// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../../../../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id     String @id @default(uuid())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("profiles")
}

model Agency {
  id    String @id @default(uuid())
  name  String
  users User[]

  @@map("agencies")
}

model User {
  id             String      @id @default(uuid())
  name           String
  email          String      @unique
  password       String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  agency         Agency?     @relation(fields: [agencyId], references: [id])
  agencyId       String?
  role           Role        @default(USER)
  status         User_Status @default(ACTIVE)
  profile        Profile?
  authoredISSPs  ISSP[]      @relation("AuthoredISSPs")
  evaluatedISSPs ISSP[]      @relation("EvaluatedISSPs")
  endorsedISSPs  ISSP[]      @relation("EndorsedISSPs")
  approvedISSPs  ISSP[]      @relation("ApprovedISSPs")

  @@map("users")
}

model ISSP {
  id          String      @id @default(uuid())
  title       String      @unique
  description String?
  createdAt   DateTime    @default(now())
  updateAt    DateTime    @updatedAt
  authorId    String?
  status      ISSP_Status @default(NOT_STARTED)
  yearStart   String
  yearEnd     String
  authors     User[]      @relation("AuthoredISSPs")
  evaluators  User[]      @relation("EvaluatedISSPs")
  endorsers   User[]      @relation("EndorsedISSPs")
  approvers   User[]      @relation("ApprovedISSPs")

  @@map("issps")
}

enum Role {
  USER
  VIEWER
  EVALUATOR
  ENDORSER
  APPROVER
  ADMIN
  SUPER_ADMIN
}

enum ISSP_Status {
  NOT_STARTED
  UNDER_REVIEW
  FOR_VALIDATION
  FOR_ENDORSEMENT
  APPROVED
}

enum User_Status {
  ACTIVE
  INACTIVE
  DELETED
}
